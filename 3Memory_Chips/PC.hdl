// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    //in the Mux16 below "a" should never be astered on the reg while load
    Mux16(a=false, b=addo, sel=inc, out=m1o);
    Mux16(a=m1o, b=in, sel=load, out=m2o);
    Mux16(a=m2o, b=false, sel=reset, out=m3o);
    
    Or(a=reset, b=L2, out=L1);
    Or(a=load, b=inc, out=L2);

    Register(in=m3o, load=L1, out=rego, out=out);

    Add16(a[0]=true, a[1..15]=false, b=rego, out=addo);    
}
